version: "3.4"
services:
  db:
    image: mysql:5.7
    container_name: 'db.${ENDPOINT_NAME}'
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${ENDPOINT_NAME}
      MYSQL_USER: ${ENDPOINT_NAME}
      MYSQL_PASSWORD: ${ENDPOINT_NAME}
      MYSQL_DATABASE: ${ENDPOINT_NAME}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    volumes:
      - ./data/db:/var/lib/mysql
      - ./data/dump:/docker-entrypoint-initdb.d
      - /etc/localtime:/etc/localtime:ro
  web:
    image: nginx:latest
    restart: unless-stopped
    container_name: 'web.${ENDPOINT_NAME}'
    ports:
      - ${PORT}:80
    environment:
      ENDPOINT_NAME: ${ENDPOINT_NAME}
    command: sh -c "envsubst '$$ENDPOINT_NAME' < /etc/nginx/conf.d/site.template > /etc/nginx/conf.d/site.conf && exec nginx -g 'daemon off;'"
    volumes:
      - ./nginx/config:/etc/nginx/conf.d
      - ./data/logs/nginx:/var/log/nginx
      - /etc/localtime:/etc/localtime:ro
      - ../:/var/www/html
  php:
    build:
      context: ./php
    container_name: 'php.${ENDPOINT_NAME}'
    environment:
      ENDPOINT_NAME: ${ENDPOINT_NAME}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ../:/var/www/html
      - ./data/composer-cache:/var/www/.composer/cache
  socket_io:
    image: node
    container_name: 'socketio.${ENDPOINT_NAME}'
    user: "node"
    volumes:
      - ../socket:/home/node/app
    working_dir: /home/node/app
    command: "yarn install && yarn start"
  webpack:
    image: node
    container_name: 'webpack.${ENDPOINT_NAME}'
    user: "node"
    volumes:
      - ../:/home/node/app
    working_dir: /home/node/app
    command: "yarn install && yarn build"
  redis:
    image: redis
    container_name: 'redis.${ENDPOINT_NAME}'
    command: ["sh", "-c", "exec redis-server --requirepass \"${REDIS_PASSWORD}\""]
